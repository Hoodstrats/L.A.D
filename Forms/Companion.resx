<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="_helpLabel.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="_timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ExERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERFRhv4f0HOjXYPSzX4AAAAASUVORK5CYII=
</value>
  </data>
</root>